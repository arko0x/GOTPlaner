@using GOTPlaner.ViewModels
@model CreateSegmentViewModel
@{
    ViewData["Title"] = "Create";
}

<h1>Dodawanie Odcinka</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @if (Model.IsSegmentAlreadyInASystem) {
                    <span class="text-danger">Taki odcinek istnieje już w systemie!</span>
                }
                @if (Model.AreTouristPointsTheSame) {
                    <span class="text-danger">Dwa punkty turystyczne nie mogą być takie same w tym samym odcinku!</span>
                }
            </div>
            <div class="form-group">
                <label asp-for="PointA" class="control-label">Punkt A: </label>
                <input asp-for="PointA" autocomplete="off" class="form-control basicAutoComplete" id="PointA" />
                <span asp-validation-for="PointA" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MountainRangeAId" class="control-label">Pasmo górskie: </label>
                <select asp-for="MountainRangeAId" asp-items="@(new SelectList(Model.MountainRanges, nameof(MountainRange.MountainRangeId), nameof(MountainRange.Name)))">
                </select>
            </div>
            <div class="form-group">
                <label asp-for="PointB" class="control-label">Punkt B: </label>
                <input asp-for="PointB" autocomplete="off" class="form-control basicAutoComplete" />
                <span asp-validation-for="PointB" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MountainRangeBId" class="control-label">Pasmo górskie: </label>
                <select asp-for="MountainRangeBId" asp-items="@(new SelectList(Model.MountainRanges, nameof(MountainRange.MountainRangeId), nameof(MountainRange.Name)))">
                </select>
            </div>

            <div class="form-group">
                <label asp-for="PointsAB" class="control-label">Punkty AB: </label>
                <input asp-for="PointsAB" autocomplete="off" min="0" class="form-control" />
                <span asp-validation-for="PointsAB" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PointsBA" class="control-label">Punkty BA: </label>
                <input asp-for="PointsBA" autocomplete="off" min="0" class="form-control" />
                <span asp-validation-for="PointsBA" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfKilometers" class="control-label">Liczba kiometrów: </label>
                <input asp-for="NumberOfKilometers" autocomplete="off" class="form-control" />
                <span asp-validation-for="NumberOfKilometers" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LevelDifferenceSum" class="control-label">Suma różnic poziomów: </label>
                <input asp-for="LevelDifferenceSum" autocomplete="off" class="form-control" />
                <span asp-validation-for="LevelDifferenceSum" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Dodaj odcinek" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Powrót do listy odcinków</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="@Url.Content("~/js/createSegment.js")"></script>
}
